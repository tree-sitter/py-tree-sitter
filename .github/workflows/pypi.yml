name: Upload to PyPI

on:
  push:
    tags:
      - v[0-9]+.*
      - test-v[0-9]+.*

jobs:
  build-sdist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Build sources
        run: python -mbuild --sdist
      - name: Upload sources
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  build-wheels:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16
        env:
          CIBW_ARCHS_MACOS: x86_64 arm64 universal2
          CIBW_ARCHS_LINUX: x86_64 aarch64
          CIBW_TEST_SKIP: "*aarch64 *arm64"
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{matrix.os}}
          path: wheelhouse/*.whl

  release:
    runs-on: ubuntu-latest
    needs: [build-sdist, build-wheels]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: |-
            sdist
            wheels-*
          path: dist
          merge-multiple: true
      - name: Check artifacts
        run: ls -la dist
      - name: Upload to test.pypi.org
        if: startsWith(github.ref_name, 'test-v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: secrets.TEST_PYPI_API_TOKEN
          repository_url: https://test.pypi.org/legacy/
      - name: Upload to pypi.org
        if: startsWith(github.ref_name, 'v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{secrets.PYPI_API_TOKEN}}
      - name: Create GitHub Release
        if: startsWith(github.ref_name, 'v')
        run: gh release create "$GITHUB_REF_NAME" dist/* --generate-notes
        env:
          GH_TOKEN: ${{github.token}}
